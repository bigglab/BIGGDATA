"""empty message

Revision ID: 3e49124c58cc
Revises: 4a70b8111863
Create Date: 2015-11-16 13:56:22.621388

"""

# revision identifiers, used by Alembic.
revision = '3e49124c58cc'
down_revision = '4a70b8111863'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('program', sa.String(), nullable=True),
    sa.Column('started', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('finished', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('duration', postgresql.TSRANGE(), nullable=True),
    sa.Column('params', postgresql.JSON(), nullable=True),
    sa.Column('vdj_count', sa.Integer(), nullable=True),
    sa.Column('vj_count', sa.Integer(), nullable=True),
    sa.Column('tcra_count', sa.Integer(), nullable=True),
    sa.Column('tcrb_count', sa.Integer(), nullable=True),
    sa.Column('total_count', sa.Integer(), nullable=True),
    sa.Column('passed_filter', sa.Integer(), nullable=True),
    sa.Column('command', sa.String(length=256), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sequence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('header', sa.String(length=100), nullable=True),
    sa.Column('sequence', sa.String(length=500), nullable=True),
    sa.Column('quality', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('annotation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sequence_id', sa.Integer(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('analysis_id', sa.Integer(), nullable=True),
    sa.Column('_id', postgresql.JSON(), nullable=True),
    sa.Column('seq_id', postgresql.JSON(), nullable=True),
    sa.Column('exp_id', postgresql.JSON(), nullable=True),
    sa.Column('analysis_name', sa.String(), nullable=True),
    sa.Column('strand', sa.String(length=10), nullable=True),
    sa.Column('productive', sa.Boolean(), nullable=True),
    sa.Column('productive_comment', sa.String(length=256), nullable=True),
    sa.Column('recombination_type', sa.String(length=20), nullable=True),
    sa.Column('chain', sa.String(length=20), nullable=True),
    sa.Column('locus', sa.String(), nullable=True),
    sa.Column('isotype', sa.String(), nullable=True),
    sa.Column('isotype_mismatches', sa.Integer(), nullable=True),
    sa.Column('isotype_percent_similarity', sa.FLOAT(), nullable=True),
    sa.Column('isotype_barcode_direction', sa.String(), nullable=True),
    sa.Column('nt', sa.String(length=600), nullable=True),
    sa.Column('aa', sa.String(length=200), nullable=True),
    sa.Column('cdr1_aa', sa.String(length=100), nullable=True),
    sa.Column('cdr1_nt', sa.String(length=100), nullable=True),
    sa.Column('cdr2_aa', sa.String(length=100), nullable=True),
    sa.Column('cdr2_nt', sa.String(length=100), nullable=True),
    sa.Column('cdr3_aa', sa.String(length=100), nullable=True),
    sa.Column('cdr3_nt', sa.String(length=100), nullable=True),
    sa.Column('fr1_nt', sa.String(length=200), nullable=True),
    sa.Column('fr1_aa', sa.String(length=100), nullable=True),
    sa.Column('fr2_nt', sa.String(length=100), nullable=True),
    sa.Column('fr2_aa', sa.String(length=100), nullable=True),
    sa.Column('fr3_nt', sa.String(length=100), nullable=True),
    sa.Column('fr3_aa', sa.String(length=200), nullable=True),
    sa.Column('fr4_nt', sa.String(length=100), nullable=True),
    sa.Column('fr4_aa', sa.String(length=100), nullable=True),
    sa.Column('c_top_hit', sa.String(), nullable=True),
    sa.Column('c_top_hit_locus', sa.String(), nullable=True),
    sa.Column('v_top_hit', sa.String(), nullable=True),
    sa.Column('v_top_hit_locus', sa.String(), nullable=True),
    sa.Column('d_top_hit', sa.String(), nullable=True),
    sa.Column('d_top_hit_locus', sa.String(), nullable=True),
    sa.Column('j_top_hit', sa.String(), nullable=True),
    sa.Column('j_top_hit_locus', sa.String(), nullable=True),
    sa.Column('c_hits', postgresql.JSON(), nullable=True),
    sa.Column('j_hits', postgresql.JSON(), nullable=True),
    sa.Column('d_hits', postgresql.JSON(), nullable=True),
    sa.Column('v_hits', postgresql.JSON(), nullable=True),
    sa.Column('shm_aa', sa.FLOAT(), nullable=True),
    sa.Column('shm_nt', sa.FLOAT(), nullable=True),
    sa.Column('shm_nt_percent', sa.FLOAT(), nullable=True),
    sa.Column('shm_aa_percent', sa.FLOAT(), nullable=True),
    sa.Column('v_shm_nt', sa.Integer(), nullable=True),
    sa.Column('v_shm_percent', sa.FLOAT(), nullable=True),
    sa.Column('j_shm_nt', sa.Integer(), nullable=True),
    sa.Column('j_shm_percent', sa.FLOAT(), nullable=True),
    sa.Column('full_length', sa.Boolean(), nullable=True),
    sa.Column('cdr3_junction_in_frame', sa.Boolean(), nullable=True),
    sa.Column('codon_frame', sa.Integer(), nullable=True),
    sa.Column('start_codon', sa.Integer(), nullable=True),
    sa.Column('stop_codon', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], ),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['sequence_id'], ['sequence.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annotation')
    op.drop_table('sequence')
    op.drop_table('analysis')
    ### end Alembic commands ###

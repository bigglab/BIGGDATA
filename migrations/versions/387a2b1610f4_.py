"""empty message

Revision ID: 387a2b1610f4
Revises: None
Create Date: 2017-02-15 18:04:09.713196

"""

# revision identifiers, used by Alembic.
revision = '387a2b1610f4'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('type', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('release_date', sa.DATE(), nullable=True),
    sa.Column('version', sa.VARCHAR(), nullable=True),
    sa.Column('sample_size', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gene',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('locus_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['locus_id'], ['locus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('allele',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('functionality', sa.TEXT(), nullable=True),
    sa.Column('sequence', sa.TEXT(), nullable=True),
    sa.Column('gapped_sequence', sa.TEXT(), nullable=True),
    sa.Column('imgt_accession', sa.TEXT(), nullable=True),
    sa.Column('labels', sa.TEXT(), nullable=True),
    sa.Column('codon_start', postgresql.DOUBLE_PRECISION(), nullable=True),
    sa.Column('nucleotide_length', postgresql.DOUBLE_PRECISION(), nullable=True),
    sa.Column('partial', sa.TEXT(), nullable=True),
    sa.Column('reverse_complementary', sa.TEXT(), nullable=True),
    sa.Column('species', sa.TEXT(), nullable=True),
    sa.Column('coords', sa.TEXT(), nullable=True),
    sa.Column('locus_id', sa.Integer(), nullable=True),
    sa.Column('gene_id', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.id'], ),
    sa.ForeignKeyConstraint(['locus_id'], ['locus.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key('log_file_id', 'analysis', 'file', ['log_file_id'], ['id'], use_alter=True)
    op.create_foreign_key('zip_file_id', 'analysis', 'file', ['zip_file_id'], ['id'], use_alter=True)
    op.create_foreign_key('traceback_file_id', 'analysis', 'file', ['traceback_file_id'], ['id'], use_alter=True)
    op.create_foreign_key('traceback_file_id', 'analysis', 'file', ['settings_file_id'], ['id'], use_alter=True)
    op.drop_index('datasets_user_gin_idx', table_name='dataset')
    op.drop_index('files_dataset_gin_idx', table_name='file')
    op.drop_index('files_filetype_idx', table_name='file')
    op.drop_index('projects_datasets_idx', table_name='project_dataset')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_index('projects_datasets_idx', 'project_dataset', ['project_id', 'dataset_id'], unique=False)
    op.create_index('files_filetype_idx', 'file', ['file_type'], unique=False)
    op.create_index('files_dataset_gin_idx', 'file', ['dataset_id'], unique=False)
    op.create_index('datasets_user_gin_idx', 'dataset', ['user_id'], unique=False)
    op.drop_constraint('traceback_file_id', 'analysis', type_='foreignkey')
    op.drop_constraint('traceback_file_id', 'analysis', type_='foreignkey')
    op.drop_constraint('zip_file_id', 'analysis', type_='foreignkey')
    op.drop_constraint('log_file_id', 'analysis', type_='foreignkey')
    op.drop_table('allele')
    op.drop_table('gene')
    op.drop_table('source')
    op.drop_table('locus')
    ### end Alembic commands ###
